
// This file has been generated by the GUI designer. Do not modify.
namespace test
{
	public partial class MainWin
	{
		private global::Gtk.Notebook notebook1;
		private global::Gtk.VPaned vpaned1;
		private global::Gtk.VBox vbox1;
		private global::Gtk.VBox vbox2;
		private global::Gtk.Label label2;
		private global::Gtk.Button BtnTreeViewDemo;
		private global::Gtk.Frame frame1;
		private global::Gtk.Alignment GtkAlignment3;
		private global::Gtk.ScrolledWindow GtkScrolledWindow;
		private global::Gtk.TextView textview1;
		private global::Gtk.Label GtkLabel3;
		private global::Gtk.Label label1;
		private global::Gtk.VBox vbox3;
		private global::Gtk.Label label4;
		private global::Gtk.Button BtnSimpleListDemo;
		private global::Gtk.Frame frame2;
		private global::Gtk.Alignment GtkAlignment4;
		private global::Gtk.ScrolledWindow GtkScrolledWindow1;
		private global::Gtk.TextView textview2;
		private global::Gtk.Label GtkLabel4;
		private global::Gtk.Label label3;
		private global::Gtk.VBox vbox4;
		private global::Gtk.Label label6;
		private global::Gtk.Button BtnStartComboDemo;
		private global::Gtk.ScrolledWindow GtkScrolledWindow2;
		private global::Gtk.TextView textview3;
		private global::Gtk.Label label5;
		private global::Gtk.VBox vbox5;
		private global::Gtk.Label label14;
		private global::Gtk.Button ComboTreeDemo;
		private global::Gtk.ScrolledWindow GtkScrolledWindow3;
		private global::Gtk.TextView TxtComboTree;
		private global::Gtk.Label label9;
		private global::Gtk.VBox vbox6;
		private global::Gtk.Frame frame3;
		private global::Gtk.Alignment GtkAlignment8;
		private global::Gtk.HBox hbox2;
		private global::HollyLibrary.HColorPicker ColorPicker;
		private global::Gtk.Label GtkLabel6;
		private global::Gtk.Frame frame4;
		private global::Gtk.Alignment GtkAlignment1;
		private global::HollyLibrary.HComboFolder hcombofolder1;
		private global::Gtk.Label GtkLabel7;
		private global::Gtk.Frame frame5;
		private global::Gtk.Alignment GtkAlignment2;
		private global::HollyLibrary.HDateEdit hdateedit2;
		private global::Gtk.Label GtkLabel8;
		private global::Gtk.Frame frame6;
		private global::Gtk.Alignment GtkAlignment5;
		private global::HollyLibrary.HFontPicker hfontpicker1;
		private global::Gtk.Label GtkLabel9;
		private global::Gtk.Frame frame7;
		private global::Gtk.Alignment GtkAlignment6;
		private global::HollyLibrary.HIpEntry hipentry1;
		private global::Gtk.Label GtkLabel10;
		private global::Gtk.Frame frame8;
		private global::Gtk.Alignment GtkAlignment7;
		private global::Gtk.VBox vbox7;
		private global::HollyLibrary.HRegExEntry RegExEntry;
		private global::Gtk.HBox hbox13;
		private global::Gtk.Label label12;
		private global::Gtk.Entry TxtRegularExpresion;
		private global::Gtk.Button BtnApplyRegex;
		private global::Gtk.Label GtkLabel12;
		private global::Gtk.Button BtnToolTip;
		private global::Gtk.Label label11;
		private global::Gtk.HBox hbox14;
		private global::Gtk.VBox vbox8;
		private global::HollyLibrary.HColorPickerWidget hcolorpickerwidget1;

		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget test.MainWin
			this.Name = "test.MainWin";
			this.Title = global::Mono.Unix.Catalog.GetString ("MainWin");
			this.WindowPosition = ((global::Gtk.WindowPosition)(3));
			// Container child test.MainWin.Gtk.Container+ContainerChild
			this.notebook1 = new global::Gtk.Notebook ();
			this.notebook1.CanFocus = true;
			this.notebook1.Name = "notebook1";
			this.notebook1.CurrentPage = 2;
			this.notebook1.Scrollable = true;
			// Container child notebook1.Gtk.Notebook+NotebookChild
			this.vpaned1 = new global::Gtk.VPaned ();
			this.vpaned1.CanFocus = true;
			this.vpaned1.Name = "vpaned1";
			this.vpaned1.Position = 42;
			// Container child vpaned1.Gtk.Paned+PanedChild
			this.vbox1 = new global::Gtk.VBox ();
			this.vbox1.Name = "vbox1";
			this.vbox1.Spacing = 6;
			// Container child vbox1.Gtk.Box+BoxChild
			this.vbox2 = new global::Gtk.VBox ();
			this.vbox2.Name = "vbox2";
			this.vbox2.Spacing = 6;
			// Container child vbox2.Gtk.Box+BoxChild
			this.label2 = new global::Gtk.Label ();
			this.label2.Name = "label2";
			this.label2.LabelProp = global::Mono.Unix.Catalog.GetString ("<b>HTreeView</b>");
			this.label2.UseMarkup = true;
			this.vbox2.Add (this.label2);
			global::Gtk.Box.BoxChild w1 = ((global::Gtk.Box.BoxChild)(this.vbox2 [this.label2]));
			w1.Position = 0;
			w1.Expand = false;
			w1.Fill = false;
			// Container child vbox2.Gtk.Box+BoxChild
			this.BtnTreeViewDemo = new global::Gtk.Button ();
			this.BtnTreeViewDemo.CanFocus = true;
			this.BtnTreeViewDemo.Name = "BtnTreeViewDemo";
			this.BtnTreeViewDemo.UseUnderline = true;
			this.BtnTreeViewDemo.Label = global::Mono.Unix.Catalog.GetString ("Start demo");
			this.vbox2.Add (this.BtnTreeViewDemo);
			global::Gtk.Box.BoxChild w2 = ((global::Gtk.Box.BoxChild)(this.vbox2 [this.BtnTreeViewDemo]));
			w2.Position = 1;
			w2.Expand = false;
			w2.Fill = false;
			this.vbox1.Add (this.vbox2);
			global::Gtk.Box.BoxChild w3 = ((global::Gtk.Box.BoxChild)(this.vbox1 [this.vbox2]));
			w3.Position = 0;
			w3.Expand = false;
			w3.Fill = false;
			this.vpaned1.Add (this.vbox1);
			global::Gtk.Paned.PanedChild w4 = ((global::Gtk.Paned.PanedChild)(this.vpaned1 [this.vbox1]));
			w4.Resize = false;
			// Container child vpaned1.Gtk.Paned+PanedChild
			this.frame1 = new global::Gtk.Frame ();
			this.frame1.Name = "frame1";
			this.frame1.ShadowType = ((global::Gtk.ShadowType)(0));
			// Container child frame1.Gtk.Container+ContainerChild
			this.GtkAlignment3 = new global::Gtk.Alignment (0F, 0F, 1F, 1F);
			this.GtkAlignment3.Name = "GtkAlignment3";
			this.GtkAlignment3.LeftPadding = ((uint)(12));
			// Container child GtkAlignment3.Gtk.Container+ContainerChild
			this.GtkScrolledWindow = new global::Gtk.ScrolledWindow ();
			this.GtkScrolledWindow.Name = "GtkScrolledWindow";
			this.GtkScrolledWindow.ShadowType = ((global::Gtk.ShadowType)(1));
			// Container child GtkScrolledWindow.Gtk.Container+ContainerChild
			this.textview1 = new global::Gtk.TextView ();
			this.textview1.Buffer.Text = "using System;\nusing HollyLibrary;\nusing Gtk;\n\nnamespace test\n{\n\t\n\tpublic class Tr" +
			"eeView : Window\n\t{\n\t\t//the tree widget\n\t\tHTreeView tree       = new HTreeView();" +
			"\n\t\t//buttons\n\t\tButton BtnAddNode    = new Button(\"Add node\");\n\t\tButton BtnRemove" +
			"Node = new Button(\"Remove node\");\n\t\tButton BtnEditNode   = new Button(\"Edit node" +
			"\");\n\t\t//checkboxes\n\t\tCheckButton ChkNodeIconVisible = new CheckButton(\"Node icon" +
			" is visible\");\n\t\tCheckButton ChkCheckBoxTree    = new CheckButton(\"Tree is check" +
			"box tree\");\n\t\tCheckButton ChkEditableTree    = new CheckButton(\"Tree is editable" +
			"\");\n\t\t\n\t\tpublic TreeView() : base( WindowType.Toplevel )\n\t\t{\n\t\t\tthis.Title      " +
			"    = \"HTreeView demo\";\n\t\t\tthis.WindowPosition = Gtk.WindowPosition.CenterAlways" +
			";\n\t\t\tthis.Resize( 320, 240 );\n\t\t\t//\n\t\t\tinitGui();\n\t\t\t//button events\n\t\t\tBtnAddNo" +
			"de.Clicked         += OnBtnAddClicked;\n\t\t\tBtnEditNode.Clicked        += OnBtnEdi" +
			"tClicked;\n\t\t\tBtnRemoveNode.Clicked      += OnBtnRemoveClicked;\n\t\t\t//checkbox eve" +
			"nts\n\t\t\tChkCheckBoxTree.Toggled    += OnCheckBoxChecked;\n\t\t\tChkEditableTree.Toggl" +
			"ed    += OnEditableChecked;\n\t\t\tChkNodeIconVisible.Toggled += OnNodeIconChecked;\n" +
			"\t\t\t//make the tree to show icons by default\n\t\t\tChkNodeIconVisible.Active   = tru" +
			"e;\n\t\t\t\n\t\t}\n\t\t\n\t\tprivate void OnBtnAddClicked( object sender, EventArgs args )\n\t\t" +
			"{\n\t\t\t//make a icon from a stock image\n\t\t\tGdk.Pixbuf icon = GraphUtil.pixbufFromS" +
			"tock(\"gtk-yes\", IconSize.Button );\n\t\t\t//create the new node\n\t\t\tHTreeNode node  =" +
			" new HTreeNode( \"new node!\", icon );\n\t\t\t//check if there is a node selected\n\t\t\tH" +
			"TreeNode selected_node = tree.SelectedNode;\n\t\t\t//if no node is selected, add the" +
			" new node directly to the base\n\t\t\tif( selected_node == null )\n\t\t\t\ttree.Nodes.Add" +
			"( node );\n\t\t\telse\n\t\t\t\tselected_node.Nodes.Add( node );\n\t\t}\n\t\t\n\t\tprivate void OnB" +
			"tnEditClicked( object sender, EventArgs args )\n\t\t{\n\t\t\t//change the text/icon to " +
			"the selected node\n\t\t\tHTreeNode node = tree.SelectedNode;\n\t\t\tif( node != null )\n\t" +
			"\t\t{\n\t\t\t\tnode.Text = \"new and shiny modified value!\";\n\t\t\t\tnode.Icon = GraphUtil.p" +
			"ixbufFromStock(\"gtk-add\", IconSize.Button );\n\t\t\t}\n\t\t}\n\t\t\n\t\tprivate void OnBtnRem" +
			"oveClicked( object sender, EventArgs args )\n\t\t{\n\t\t\t//remove the selected node\n\t\t" +
			"\tHTreeNode node = tree.SelectedNode;\n\t\t\tif( node != null )\n\t\t\t{\n\t\t\t\tif( node.Par" +
			"entNode == null )\n\t\t\t\t\ttree.Nodes.Remove( node );\n\t\t\t\telse\n\t\t\t\t\tnode.ParentNode." +
			"Nodes.Remove( node );\n\t\t\t}\n\t\t}\n\t\t\n\t\tprivate void OnCheckBoxChecked( object sende" +
			"r, EventArgs args )\n\t\t{\n\t\t\ttree.IsCheckBoxTree = ChkCheckBoxTree.Active;\n\t\t}\n\t\t\n" +
			"\t\tprivate void OnEditableChecked( object sender, EventArgs args )\n\t\t{\n\t\t\ttree.Ed" +
			"itable = ChkEditableTree.Active;\n\t\t}\n\t\t\n\t\tprivate void OnNodeIconChecked( object" +
			" sender, EventArgs args )\n\t\t{\n\t\t\ttree.NodeIconVisible = ChkNodeIconVisible.Activ" +
			"e;\n\t\t}\n\t\t\n\t\tprivate void initGui()\n\t\t{\n\t\t\t//create the layout\n\t\t\tVBox layout = n" +
			"ew VBox();\n\t\t\t//add the treeview\n\t\t\tScrolledWindow swTree = new ScrolledWindow()" +
			";\n\t\t\tswTree.AddWithViewport( tree );\n\t\t\tlayout.PackStart( swTree );\n\t\t\t//add the" +
			" add/edit/remove buttons\n\t\t\tHBox hbox = new HBox();\n\t\t\thbox.PackStart  ( BtnAddN" +
			"ode    );\n\t\t\thbox.PackStart  ( BtnEditNode   );\n\t\t\thbox.PackStart  ( BtnRemoveNo" +
			"de );\n\t\t\tlayout.PackStart( hbox, false, true, 0 );\n\t\t\t//add the checkboxes\n\t\t\thb" +
			"ox      = new HBox();\n\t\t\thbox.PackStart  ( ChkNodeIconVisible );\n\t\t\thbox.PackSta" +
			"rt  ( ChkCheckBoxTree    );\n\t\t\thbox.PackStart  ( ChkEditableTree    );\n\t\t\tlayout" +
			".PackStart( hbox, false, true, 0 );\n\t\t\t//add layout\n\t\t\tthis.Add( layout );\n\t\t}\n\t" +
			"\t\n\t}\n}\n";
			this.textview1.CanFocus = true;
			this.textview1.Name = "textview1";
			this.textview1.Editable = false;
			this.GtkScrolledWindow.Add (this.textview1);
			this.GtkAlignment3.Add (this.GtkScrolledWindow);
			this.frame1.Add (this.GtkAlignment3);
			this.GtkLabel3 = new global::Gtk.Label ();
			this.GtkLabel3.Name = "GtkLabel3";
			this.GtkLabel3.LabelProp = global::Mono.Unix.Catalog.GetString ("<b>Code</b>");
			this.GtkLabel3.UseMarkup = true;
			this.frame1.LabelWidget = this.GtkLabel3;
			this.vpaned1.Add (this.frame1);
			this.notebook1.Add (this.vpaned1);
			// Notebook tab
			this.label1 = new global::Gtk.Label ();
			this.label1.Name = "label1";
			this.label1.LabelProp = global::Mono.Unix.Catalog.GetString ("HTreeView");
			this.notebook1.SetTabLabel (this.vpaned1, this.label1);
			this.label1.ShowAll ();
			// Container child notebook1.Gtk.Notebook+NotebookChild
			this.vbox3 = new global::Gtk.VBox ();
			this.vbox3.Name = "vbox3";
			this.vbox3.Spacing = 6;
			// Container child vbox3.Gtk.Box+BoxChild
			this.label4 = new global::Gtk.Label ();
			this.label4.Name = "label4";
			this.label4.LabelProp = global::Mono.Unix.Catalog.GetString ("<b>HSimpleList</b>");
			this.label4.UseMarkup = true;
			this.vbox3.Add (this.label4);
			global::Gtk.Box.BoxChild w10 = ((global::Gtk.Box.BoxChild)(this.vbox3 [this.label4]));
			w10.Position = 0;
			w10.Expand = false;
			// Container child vbox3.Gtk.Box+BoxChild
			this.BtnSimpleListDemo = new global::Gtk.Button ();
			this.BtnSimpleListDemo.CanFocus = true;
			this.BtnSimpleListDemo.Name = "BtnSimpleListDemo";
			this.BtnSimpleListDemo.UseUnderline = true;
			this.BtnSimpleListDemo.Label = global::Mono.Unix.Catalog.GetString ("Start demo");
			this.vbox3.Add (this.BtnSimpleListDemo);
			global::Gtk.Box.BoxChild w11 = ((global::Gtk.Box.BoxChild)(this.vbox3 [this.BtnSimpleListDemo]));
			w11.Position = 1;
			w11.Expand = false;
			// Container child vbox3.Gtk.Box+BoxChild
			this.frame2 = new global::Gtk.Frame ();
			this.frame2.Name = "frame2";
			this.frame2.ShadowType = ((global::Gtk.ShadowType)(0));
			// Container child frame2.Gtk.Container+ContainerChild
			this.GtkAlignment4 = new global::Gtk.Alignment (0F, 0F, 1F, 1F);
			this.GtkAlignment4.Name = "GtkAlignment4";
			this.GtkAlignment4.LeftPadding = ((uint)(12));
			// Container child GtkAlignment4.Gtk.Container+ContainerChild
			this.GtkScrolledWindow1 = new global::Gtk.ScrolledWindow ();
			this.GtkScrolledWindow1.Name = "GtkScrolledWindow1";
			this.GtkScrolledWindow1.ShadowType = ((global::Gtk.ShadowType)(1));
			// Container child GtkScrolledWindow1.Gtk.Container+ContainerChild
			this.textview2 = new global::Gtk.TextView ();
			this.textview2.Buffer.Text = "using Gtk;\nusing System;\nusing System.Drawing;\nusing System.Drawing.Drawing2D;\nus" +
			"ing HollyLibrary;\n\nnamespace test\n{\n\t\n\tpublic class SimpleList : Window\n\t{\n\t\t//t" +
			"he list widget\n\t\tHSimpleList list = new HSimpleList();\n\t\t//buttons\n\t\tButton BtnA" +
			"dd    = new Button(\"Add item\");\n\t\tButton BtnRemove = new Button(\"Remove item\");\n" +
			"\t\tButton BtnEdit   = new Button(\"Edit item\");\n\t\tButton BtnSort   = new Button(\"S" +
			"ort\");\n\t\t//checkboxes\n\t\tCheckButton ChkOwnerDrawned   = new CheckButton(\"List is" +
			" ownerdrawed\");\n\t\tCheckButton ChkIsCheckBoxList = new CheckButton(\"Checkbox list" +
			"\");\n\t\t\n\t\tpublic SimpleList() : base( WindowType.Toplevel )\n\t\t{\n\t\t\tthis.Title    " +
			"      = \"HSimpleList demo\";\n\t\t\tthis.WindowPosition = Gtk.WindowPosition.CenterAl" +
			"ways;\n\t\t\tthis.Resize( 320, 240 );\n\t\t\t//\n\t\t\tinitGui();\n\t\t\t//button events\n\t\t\tBtnA" +
			"dd.Clicked          += OnBtnAddClicked;\n\t\t\tBtnEdit.Clicked         += OnBtnEditC" +
			"licked;\n\t\t\tBtnRemove.Clicked       += OnBtnRemoveClicked;\n\t\t\tBtnSort.Clicked    " +
			"     += OnBtnSortClicked;\n\t\t\t//checkbox events\n\t\t\tChkOwnerDrawned.Toggled   += O" +
			"nOwnerDrawnedChecked;\n\t\t\tChkIsCheckBoxList.Toggled += OnIsCheckBoxListChecked;\n\t" +
			"\t\t//ownerdrawned event\n\t\t\tlist.DrawItem           += OnItemDraw;\n\t\t}\n\t\t\n\t\tprivat" +
			"e void OnBtnSortClicked( object sender, EventArgs args )\n\t\t{\n\t\t\tlist.Sort();\n\t\t}" +
			"\n\t\t\n\t\tprivate void OnBtnAddClicked( object sender, EventArgs args )\n\t\t{\n\t\t\t//add" +
			" a list item\n\t\t\tlist.Items.Add(\"new item !\");\n\t\t}\n\t\t\n\t\tprivate void OnBtnEditCli" +
			"cked( object sender, EventArgs args )\n\t\t{\n\t\t\t//change the current selected item\'" +
			"s text\n\t\t\tif( list.SelectedIndex != -1 )\n\t\t\t{\n\t\t\t\tlist.Items[ list.SelectedIndex" +
			" ] = \"i\'m modified\";\n\t\t\t}\n\t\t}\n\t\t\n\t\tprivate void OnBtnRemoveClicked( object sende" +
			"r, EventArgs args )\n\t\t{\n\t\t\t//remove the selected item\n\t\t\tif( list.SelectedIndex " +
			"!= -1 )\n\t\t\t\tlist.Items.RemoveAt( list.SelectedIndex );\n\t\t\t\n\t\t}\n\t\t\n\t\tprivate void" +
			" OnOwnerDrawnedChecked( object sender, EventArgs args )\n\t\t{\n\t\t\tlist.OwnerDraw   " +
			"   = ChkOwnerDrawned.Active;\n\t\t}\n\t\t\n\t\tprivate void OnIsCheckBoxListChecked( obje" +
			"ct sender, EventArgs args )\n\t\t{\n\t\t\tlist.IsCheckBoxList = ChkIsCheckBoxList.Activ" +
			"e;\n\t\t}\n\t\t\n\t\tprivate void OnItemDraw( object sender, DrawItemEventArgs args )\n\t\t{" +
			"\n\t\t\tString text      = list.Items[ args.ItemIndex ].ToString();\n\t\t\t//take font f" +
			"rom style\n\t\t\tFont font        = new Font( Style.FontDesc.Family , Style.FontDesc" +
			".Size / 1000, FontStyle.Bold );\n\t\t\t\n\t\t\t// take color from style\n\t\t\tColor c      " +
			"    = Color.Blue;\n\t\t\tif( args.ItemIndex % 2 == 0 ) c = Color.Red;\n\t\t\t\n\t\t\tBrush b" +
			"          = new SolidBrush( c );\n\t\t\t//set quality to HighSpeed\n\t\t\targs.Graphics." +
			"CompositingQuality = CompositingQuality.HighSpeed;\n\t\t\targs.Graphics.DrawString( " +
			"text, font, b, args.CellArea.X, args.CellArea.Y );\n\t\t\targs.Graphics.Dispose();\n\t" +
			"\t}\n\t\t\n\t\tprivate void initGui()\n\t\t{\n\t\t\t//create the layout\n\t\t\tVBox layout       =" +
			" new VBox();\n\t\t\t//add the list\n\t\t\tScrolledWindow sw = new ScrolledWindow();\n\t\t\ts" +
			"w.AddWithViewport( list );\n\t\t\tlayout.PackStart  ( sw   );\n\t\t\t//add the add/edit/" +
			"remove buttons\n\t\t\tHBox hbox = new HBox();\n\t\t\thbox.PackStart  ( BtnAdd    );\n\t\t\th" +
			"box.PackStart  ( BtnEdit   );\n\t\t\thbox.PackStart  ( BtnRemove );\n\t\t\thbox.PackStar" +
			"t  ( BtnSort   );\n\t\t\tlayout.PackStart( hbox, false, true, 0 );\n\t\t\t//add the chec" +
			"kboxes\n\t\t\thbox = new HBox();\n\t\t\thbox.PackStart( ChkOwnerDrawned  , true, true, 0" +
			" );\n\t\t\thbox.PackStart( ChkIsCheckBoxList, true, true, 0 );\n\t\t\t//\n\t\t\tlayout.PackS" +
			"tart( hbox, false, true, 0 );\n\t\t\t//add layout\n\t\t\tthis.Add( layout );\n\t\t}\n\t\t\n\t}\n}" +
			"\n";
			this.textview2.CanFocus = true;
			this.textview2.Name = "textview2";
			this.textview2.Editable = false;
			this.GtkScrolledWindow1.Add (this.textview2);
			this.GtkAlignment4.Add (this.GtkScrolledWindow1);
			this.frame2.Add (this.GtkAlignment4);
			this.GtkLabel4 = new global::Gtk.Label ();
			this.GtkLabel4.Name = "GtkLabel4";
			this.GtkLabel4.LabelProp = global::Mono.Unix.Catalog.GetString ("<b>Code</b>");
			this.GtkLabel4.UseMarkup = true;
			this.frame2.LabelWidget = this.GtkLabel4;
			this.vbox3.Add (this.frame2);
			global::Gtk.Box.BoxChild w15 = ((global::Gtk.Box.BoxChild)(this.vbox3 [this.frame2]));
			w15.Position = 2;
			this.notebook1.Add (this.vbox3);
			global::Gtk.Notebook.NotebookChild w16 = ((global::Gtk.Notebook.NotebookChild)(this.notebook1 [this.vbox3]));
			w16.Position = 1;
			// Notebook tab
			this.label3 = new global::Gtk.Label ();
			this.label3.Name = "label3";
			this.label3.LabelProp = global::Mono.Unix.Catalog.GetString ("HSimpleList");
			this.notebook1.SetTabLabel (this.vbox3, this.label3);
			this.label3.ShowAll ();
			// Container child notebook1.Gtk.Notebook+NotebookChild
			this.vbox4 = new global::Gtk.VBox ();
			this.vbox4.Name = "vbox4";
			this.vbox4.Spacing = 6;
			// Container child vbox4.Gtk.Box+BoxChild
			this.label6 = new global::Gtk.Label ();
			this.label6.Name = "label6";
			this.label6.LabelProp = global::Mono.Unix.Catalog.GetString ("<b>HSimpleComboBox</b>");
			this.label6.UseMarkup = true;
			this.vbox4.Add (this.label6);
			global::Gtk.Box.BoxChild w17 = ((global::Gtk.Box.BoxChild)(this.vbox4 [this.label6]));
			w17.Position = 0;
			w17.Expand = false;
			w17.Fill = false;
			// Container child vbox4.Gtk.Box+BoxChild
			this.BtnStartComboDemo = new global::Gtk.Button ();
			this.BtnStartComboDemo.CanFocus = true;
			this.BtnStartComboDemo.Name = "BtnStartComboDemo";
			this.BtnStartComboDemo.UseUnderline = true;
			this.BtnStartComboDemo.Label = global::Mono.Unix.Catalog.GetString ("Start demo");
			this.vbox4.Add (this.BtnStartComboDemo);
			global::Gtk.Box.BoxChild w18 = ((global::Gtk.Box.BoxChild)(this.vbox4 [this.BtnStartComboDemo]));
			w18.Position = 1;
			w18.Expand = false;
			w18.Fill = false;
			// Container child vbox4.Gtk.Box+BoxChild
			this.GtkScrolledWindow2 = new global::Gtk.ScrolledWindow ();
			this.GtkScrolledWindow2.Name = "GtkScrolledWindow2";
			this.GtkScrolledWindow2.ShadowType = ((global::Gtk.ShadowType)(1));
			// Container child GtkScrolledWindow2.Gtk.Container+ContainerChild
			this.textview3 = new global::Gtk.TextView ();
			this.textview3.Buffer.Text = "using Gtk;\nusing System;\nusing System.Drawing;\nusing System.Drawing.Drawing2D;\nus" +
			"ing HollyLibrary;\n\nnamespace test\n{\n\t\n\tpublic class SimpleComboBox : Window\n\t{\n\t" +
			"\t//the list widget\n\t\tHSimpleComboBox cmb = new HSimpleComboBox();\n\t\t//buttons\n\t\t" +
			"Button BtnAdd    = new Button(\"Add item\");\n\t\tButton BtnRemove = new Button(\"Remo" +
			"ve last item\");\n\t\tButton BtnEdit   = new Button(\"Edit last item\");\n\t\t//checkboxe" +
			"s\n\t\tCheckButton ChkOwnerDrawned = new CheckButton(\"Popup list is ownerdrawed\");\n" +
			"\t\tCheckButton ChkEditable     = new CheckButton(\"Editable combo\");\n\t\t\n\t\tpublic S" +
			"impleComboBox() : base( WindowType.Toplevel )\n\t\t{\n\t\t\tthis.Title          = \"Simp" +
			"leComboBox demo\";\n\t\t\tthis.WindowPosition = Gtk.WindowPosition.CenterAlways;\n\t\t\tt" +
			"his.Resize( 320, 240 );\n\t\t\t//\n\t\t\tinitGui();\n\t\t\t//button events\n\t\t\tBtnAdd.Clicked" +
			"          += OnBtnAddClicked;\n\t\t\tBtnEdit.Clicked         += OnBtnEditClicked;\n\t\t" +
			"\tBtnRemove.Clicked       += OnBtnRemoveClicked;\n\t\t\t//checkbox events\n\t\t\tChkOwner" +
			"Drawned.Toggled += OnOwnerDrawnedChecked;\n\t\t\tChkEditable.Toggled     += OnEditab" +
			"leChecked;\n\t\t\t//ownerdrawned event\n\t\t\tcmb.List.DrawItem       += OnItemDraw;\n\t\t}" +
			"\n\t\t\n\t\tprivate void OnBtnAddClicked( object sender, EventArgs args )\n\t\t{\n\t\t\t//add" +
			" a list item\n\t\t\tcmb.List.Items.Add(\"new item !\");\n\t\t}\n\t\t\n\t\tprivate void OnBtnEdi" +
			"tClicked( object sender, EventArgs args )\n\t\t{\n\t\t\t//change the last item\'s text\n\t" +
			"\t\tif( cmb.List.Items.Count > 0 )\n\t\t\t{\n\t\t\t\tcmb.List.Items[ cmb.List.Items.Count -" +
			" 1 ] = \"i\'m modified\";\n\t\t\t}\n\t\t}\n\t\t\n\t\tprivate void OnBtnRemoveClicked( object sen" +
			"der, EventArgs args )\n\t\t{\n\t\t\t//remove the selected item\n\t\t\tif( cmb.List.Items.Co" +
			"unt > 0 )\n\t\t\t\tcmb.List.Items.RemoveAt( cmb.List.Items.Count - 1 );\n\t\t\t\n\t\t}\n\t\t\n\t\t" +
			"private void OnEditableChecked( object sender, EventArgs args )\n\t\t{\n\t\t\tcmb.IsEdi" +
			"table = ChkEditable.Active;\n\t\t}\n\t\t\n\t\tprivate void OnOwnerDrawnedChecked( object " +
			"sender, EventArgs args )\n\t\t{\n\t\t\tcmb.List.OwnerDraw      = ChkOwnerDrawned.Active" +
			";\n\t\t}\n\t\t\n\t\tprivate void OnItemDraw( object sender, DrawItemEventArgs args )\n\t\t{\n" +
			"\t\t\tString text      = cmb.List.Items[ args.ItemIndex ].ToString();\n\t\t\t//take fon" +
			"t from style\n\t\t\tFont font        = new Font( Style.FontDesc.Family , Style.FontD" +
			"esc.Size / 1000, FontStyle.Bold );\n\t\t\t\n\t\t\t// take color from style\n\t\t\tColor c   " +
			"       = Color.Blue;\n\t\t\tif( args.ItemIndex % 2 == 0 ) c = Color.Red;\n\t\t\t\n\t\t\tBrus" +
			"h b          = new SolidBrush( c );\n\t\t\t//set quality to HighSpeed\n\t\t\targs.Graphi" +
			"cs.CompositingQuality = CompositingQuality.HighSpeed;\n\t\t\targs.Graphics.DrawStrin" +
			"g( text, font, b, args.CellArea.X, args.CellArea.Y );\n\t\t\targs.Graphics.Dispose()" +
			";\n\t\t}\n\t\t\n\t\tprivate void initGui()\n\t\t{\n\t\t\t//create the layout\n\t\t\tVBox layout     " +
			"  = new VBox();\n\t\t\t//add the combo\n\t\t\tlayout.PackStart( cmb, false, false, 2);\n\t" +
			"\t\t//add the add/edit/remove buttons\n\t\t\tHBox hbox = new HBox();\n\t\t\thbox.PackStart" +
			"  ( BtnAdd    );\n\t\t\thbox.PackStart  ( BtnEdit   );\n\t\t\thbox.PackStart  ( BtnRemov" +
			"e );\n\t\t\tlayout.PackStart( hbox, false, true, 0 );\n\t\t\t//add the checkbox\n\t\t\thbox " +
			"     = new HBox();\n\t\t\thbox.PackStart( ChkOwnerDrawned );\n\t\t\thbox.PackStart( ChkE" +
			"ditable     );\n\t\t\tlayout.PackStart( hbox, false, true, 0 );\n\t\t\t//add layout\n\t\t\tt" +
			"his.Add( layout );\n\t\t}\n\t\t\n\t}\n}\n";
			this.textview3.CanFocus = true;
			this.textview3.Name = "textview3";
			this.GtkScrolledWindow2.Add (this.textview3);
			this.vbox4.Add (this.GtkScrolledWindow2);
			global::Gtk.Box.BoxChild w20 = ((global::Gtk.Box.BoxChild)(this.vbox4 [this.GtkScrolledWindow2]));
			w20.Position = 2;
			this.notebook1.Add (this.vbox4);
			global::Gtk.Notebook.NotebookChild w21 = ((global::Gtk.Notebook.NotebookChild)(this.notebook1 [this.vbox4]));
			w21.Position = 2;
			// Notebook tab
			this.label5 = new global::Gtk.Label ();
			this.label5.Name = "label5";
			this.label5.LabelProp = global::Mono.Unix.Catalog.GetString ("HSimpleComboBox");
			this.notebook1.SetTabLabel (this.vbox4, this.label5);
			this.label5.ShowAll ();
			// Container child notebook1.Gtk.Notebook+NotebookChild
			this.vbox5 = new global::Gtk.VBox ();
			this.vbox5.Name = "vbox5";
			this.vbox5.Spacing = 6;
			// Container child vbox5.Gtk.Box+BoxChild
			this.label14 = new global::Gtk.Label ();
			this.label14.Name = "label14";
			this.label14.LabelProp = global::Mono.Unix.Catalog.GetString ("<b>HComboTree</b>");
			this.label14.UseMarkup = true;
			this.vbox5.Add (this.label14);
			global::Gtk.Box.BoxChild w22 = ((global::Gtk.Box.BoxChild)(this.vbox5 [this.label14]));
			w22.Position = 0;
			w22.Expand = false;
			w22.Fill = false;
			// Container child vbox5.Gtk.Box+BoxChild
			this.ComboTreeDemo = new global::Gtk.Button ();
			this.ComboTreeDemo.CanFocus = true;
			this.ComboTreeDemo.Name = "ComboTreeDemo";
			this.ComboTreeDemo.UseUnderline = true;
			this.ComboTreeDemo.Label = global::Mono.Unix.Catalog.GetString ("Start demo");
			this.vbox5.Add (this.ComboTreeDemo);
			global::Gtk.Box.BoxChild w23 = ((global::Gtk.Box.BoxChild)(this.vbox5 [this.ComboTreeDemo]));
			w23.Position = 1;
			w23.Expand = false;
			w23.Fill = false;
			// Container child vbox5.Gtk.Box+BoxChild
			this.GtkScrolledWindow3 = new global::Gtk.ScrolledWindow ();
			this.GtkScrolledWindow3.Name = "GtkScrolledWindow3";
			this.GtkScrolledWindow3.ShadowType = ((global::Gtk.ShadowType)(1));
			// Container child GtkScrolledWindow3.Gtk.Container+ContainerChild
			this.TxtComboTree = new global::Gtk.TextView ();
			this.TxtComboTree.Buffer.Text = "using Gtk;\nusing System;\nusing System.Drawing;\nusing System.Drawing.Drawing2D;\nus" +
			"ing HollyLibrary;\n\nnamespace test\n{\n\t\n\tpublic class ComboTree : Window\n\t{\n\t\t//th" +
			"e combotree widget\n\t\tHComboTree cmb     = new HComboTree();\n\t\t//buttons\n\t\tButton" +
			" BtnAdd      = new Button( \"Add node\"       );\n\t\tButton BtnAddChild = new Button" +
			"( \"Add child node\" );\n\t\tButton BtnRemove   = new Button( \"Remove node\"    );\n\t\t/" +
			"/checkboxes\n\t\tCheckButton ChkShowIcon = new CheckButton(\"Show tree icons\");\n\t\tCh" +
			"eckButton ChkEditable = new CheckButton(\"Editable tree items\");\n\t\t\n\t\tpublic Comb" +
			"oTree() : base( WindowType.Toplevel )\n\t\t{\n\t\t\tthis.Title          = \"SimpleComboB" +
			"ox demo\";\n\t\t\tthis.WindowPosition = Gtk.WindowPosition.CenterAlways;\n\t\t\tthis.Resi" +
			"ze( 320, 240 );\n\t\t\t//\n\t\t\tinitGui();\n\t\t\t//button events\n\t\t\tBtnAdd.Clicked        " +
			"  += OnBtnAddClicked;\n\t\t\tBtnAddChild.Clicked     += OnBtnAddChildClicked;\n\t\t\tBtn" +
			"Remove.Clicked       += OnBtnRemoveClicked;\n\t\t\t//checkbox events\n\t\t\tChkShowIcon." +
			"Toggled     += OnShowIconChecked;\n\t\t\tChkEditable.Toggled     += OnEditableChecke" +
			"d;\n\t\t}\n\t\t\n\t\tprivate void OnBtnAddClicked( object sender, EventArgs args )\n\t\t{\n\t\t" +
			"\t//add a list item\n\t\t\tGdk.Pixbuf icon = GraphUtil.pixbufFromStock(\"gtk-add\", Ico" +
			"nSize.Button );\n\t\t\tint node_nr     = cmb.Tree.Nodes.Count;\n\t\t\tcmb.Tree.Nodes.Add" +
			"( new HTreeNode( \"node \" + node_nr , icon ) );\n\t\t}\n\t\t\n\t\tprivate void OnBtnAddChi" +
			"ldClicked( object sender, EventArgs args )\n\t\t{\n\t\t\t//add a new child node\n\t\t\tif( " +
			"cmb.Tree.SelectedNode != null )\n\t\t\t{\n\t\t\t\tHTreeNode father_node = cmb.Tree.Select" +
			"edNode;\n\t\t\t\tGdk.Pixbuf icon       = GraphUtil.pixbufFromStock(\"gtk-remove\", Icon" +
			"Size.Button );\n\t\t\t\tHTreeNode new_node    = new HTreeNode(\"gigi kent\", icon );\n\t\t" +
			"\t\tfather_node.Nodes.Add( new_node );\n\t\t\t}\n\t\t}\n\t\t\n\t\tprivate void OnBtnRemoveClick" +
			"ed( object sender, EventArgs args )\n\t\t{\n\t\t\t//remove the selected node\n\t\t\tHTreeNo" +
			"de node = cmb.Tree.SelectedNode;\n\t\t\tif( node != null )\n\t\t\t{\n\t\t\t\tHTreeNode parent" +
			"_node = node.ParentNode;\n\t\t\t\tif( parent_node == null )\n\t\t\t\t\tcmb.Tree.Nodes.Remov" +
			"e( node );\n\t\t\t\telse\n\t\t\t\t\tparent_node.Nodes.Remove( node );\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tpri" +
			"vate void OnEditableChecked( object sender, EventArgs args )\n\t\t{\n\t\t\tcmb.Tree.Edi" +
			"table        = ChkEditable.Active;\n\t\t}\n\t\t\n\t\tprivate void OnShowIconChecked( obje" +
			"ct sender, EventArgs args )\n\t\t{\n\t\t\tcmb.Tree.NodeIconVisible = ChkShowIcon.Active" +
			";\n\t\t}\n\t\t\n\t\tprivate void initGui()\n\t\t{\n\t\t\t//create the layout\n\t\t\tVBox layout     " +
			"  = new VBox();\n\t\t\t//add the combo\n\t\t\tlayout.PackStart( cmb, false, false, 2);\n\t" +
			"\t\t//add the add/edit/remove buttons\n\t\t\tHBox hbox = new HBox();\n\t\t\thbox.PackStart" +
			"  ( BtnAdd    );\n\t\t\thbox.PackStart  ( BtnAddChild   );\n\t\t\thbox.PackStart  ( BtnR" +
			"emove );\n\t\t\tlayout.PackStart( hbox, false, true, 0 );\n\t\t\t//add the checkbox\n\t\t\th" +
			"box      = new HBox();\n\t\t\thbox.PackStart( ChkShowIcon );\n\t\t\thbox.PackStart( ChkE" +
			"ditable );\n\t\t\tlayout.PackStart( hbox, false, true, 0 );\n\t\t\t//add layout\n\t\t\tthis." +
			"Add( layout );\n\t\t}\n\t\t\n\t}\n}\n";
			this.TxtComboTree.CanFocus = true;
			this.TxtComboTree.Name = "TxtComboTree";
			this.GtkScrolledWindow3.Add (this.TxtComboTree);
			this.vbox5.Add (this.GtkScrolledWindow3);
			global::Gtk.Box.BoxChild w25 = ((global::Gtk.Box.BoxChild)(this.vbox5 [this.GtkScrolledWindow3]));
			w25.Position = 2;
			this.notebook1.Add (this.vbox5);
			global::Gtk.Notebook.NotebookChild w26 = ((global::Gtk.Notebook.NotebookChild)(this.notebook1 [this.vbox5]));
			w26.Position = 3;
			// Notebook tab
			this.label9 = new global::Gtk.Label ();
			this.label9.Name = "label9";
			this.label9.LabelProp = global::Mono.Unix.Catalog.GetString ("HComboTree");
			this.notebook1.SetTabLabel (this.vbox5, this.label9);
			this.label9.ShowAll ();
			// Container child notebook1.Gtk.Notebook+NotebookChild
			this.vbox6 = new global::Gtk.VBox ();
			this.vbox6.Name = "vbox6";
			this.vbox6.Spacing = 6;
			// Container child vbox6.Gtk.Box+BoxChild
			this.frame3 = new global::Gtk.Frame ();
			this.frame3.Name = "frame3";
			this.frame3.ShadowType = ((global::Gtk.ShadowType)(1));
			// Container child frame3.Gtk.Container+ContainerChild
			this.GtkAlignment8 = new global::Gtk.Alignment (0F, 0F, 1F, 1F);
			this.GtkAlignment8.Name = "GtkAlignment8";
			this.GtkAlignment8.LeftPadding = ((uint)(12));
			// Container child GtkAlignment8.Gtk.Container+ContainerChild
			this.hbox2 = new global::Gtk.HBox ();
			this.hbox2.Name = "hbox2";
			this.hbox2.Spacing = 6;
			// Container child hbox2.Gtk.Box+BoxChild
			this.ColorPicker = null;
			this.hbox2.Add (this.ColorPicker);
			global::Gtk.Box.BoxChild w27 = ((global::Gtk.Box.BoxChild)(this.hbox2 [this.ColorPicker]));
			w27.Position = 0;
			w27.Expand = false;
			this.GtkAlignment8.Add (this.hbox2);
			this.frame3.Add (this.GtkAlignment8);
			this.GtkLabel6 = new global::Gtk.Label ();
			this.GtkLabel6.Name = "GtkLabel6";
			this.GtkLabel6.LabelProp = global::Mono.Unix.Catalog.GetString ("<b>HColorPicker</b>");
			this.GtkLabel6.UseMarkup = true;
			this.frame3.LabelWidget = this.GtkLabel6;
			this.vbox6.Add (this.frame3);
			global::Gtk.Box.BoxChild w30 = ((global::Gtk.Box.BoxChild)(this.vbox6 [this.frame3]));
			w30.Position = 0;
			w30.Expand = false;
			w30.Fill = false;
			// Container child vbox6.Gtk.Box+BoxChild
			this.frame4 = new global::Gtk.Frame ();
			this.frame4.Name = "frame4";
			this.frame4.ShadowType = ((global::Gtk.ShadowType)(1));
			// Container child frame4.Gtk.Container+ContainerChild
			this.GtkAlignment1 = new global::Gtk.Alignment (0F, 0F, 1F, 1F);
			this.GtkAlignment1.Name = "GtkAlignment1";
			this.GtkAlignment1.LeftPadding = ((uint)(12));
			// Container child GtkAlignment1.Gtk.Container+ContainerChild
			this.hcombofolder1 = null;
			this.GtkAlignment1.Add (this.hcombofolder1);
			this.frame4.Add (this.GtkAlignment1);
			this.GtkLabel7 = new global::Gtk.Label ();
			this.GtkLabel7.Name = "GtkLabel7";
			this.GtkLabel7.LabelProp = global::Mono.Unix.Catalog.GetString ("<b>HComboFolder</b>");
			this.GtkLabel7.UseMarkup = true;
			this.frame4.LabelWidget = this.GtkLabel7;
			this.vbox6.Add (this.frame4);
			global::Gtk.Box.BoxChild w33 = ((global::Gtk.Box.BoxChild)(this.vbox6 [this.frame4]));
			w33.Position = 1;
			w33.Expand = false;
			w33.Fill = false;
			// Container child vbox6.Gtk.Box+BoxChild
			this.frame5 = new global::Gtk.Frame ();
			this.frame5.Name = "frame5";
			this.frame5.ShadowType = ((global::Gtk.ShadowType)(1));
			// Container child frame5.Gtk.Container+ContainerChild
			this.GtkAlignment2 = new global::Gtk.Alignment (0F, 0F, 1F, 1F);
			this.GtkAlignment2.Name = "GtkAlignment2";
			this.GtkAlignment2.LeftPadding = ((uint)(12));
			// Container child GtkAlignment2.Gtk.Container+ContainerChild
			this.hdateedit2 = null;
			this.GtkAlignment2.Add (this.hdateedit2);
			this.frame5.Add (this.GtkAlignment2);
			this.GtkLabel8 = new global::Gtk.Label ();
			this.GtkLabel8.Name = "GtkLabel8";
			this.GtkLabel8.LabelProp = global::Mono.Unix.Catalog.GetString ("<b>HDateEdit</b>");
			this.GtkLabel8.UseMarkup = true;
			this.frame5.LabelWidget = this.GtkLabel8;
			this.vbox6.Add (this.frame5);
			global::Gtk.Box.BoxChild w36 = ((global::Gtk.Box.BoxChild)(this.vbox6 [this.frame5]));
			w36.Position = 2;
			w36.Expand = false;
			w36.Fill = false;
			// Container child vbox6.Gtk.Box+BoxChild
			this.frame6 = new global::Gtk.Frame ();
			this.frame6.Name = "frame6";
			this.frame6.ShadowType = ((global::Gtk.ShadowType)(1));
			// Container child frame6.Gtk.Container+ContainerChild
			this.GtkAlignment5 = new global::Gtk.Alignment (0F, 0F, 1F, 1F);
			this.GtkAlignment5.Name = "GtkAlignment5";
			this.GtkAlignment5.LeftPadding = ((uint)(12));
			// Container child GtkAlignment5.Gtk.Container+ContainerChild
			this.hfontpicker1 = null;
			this.GtkAlignment5.Add (this.hfontpicker1);
			this.frame6.Add (this.GtkAlignment5);
			this.GtkLabel9 = new global::Gtk.Label ();
			this.GtkLabel9.Name = "GtkLabel9";
			this.GtkLabel9.LabelProp = global::Mono.Unix.Catalog.GetString ("<b>HFontPicker</b>");
			this.GtkLabel9.UseMarkup = true;
			this.frame6.LabelWidget = this.GtkLabel9;
			this.vbox6.Add (this.frame6);
			global::Gtk.Box.BoxChild w39 = ((global::Gtk.Box.BoxChild)(this.vbox6 [this.frame6]));
			w39.Position = 3;
			w39.Expand = false;
			w39.Fill = false;
			// Container child vbox6.Gtk.Box+BoxChild
			this.frame7 = new global::Gtk.Frame ();
			this.frame7.Name = "frame7";
			this.frame7.ShadowType = ((global::Gtk.ShadowType)(1));
			// Container child frame7.Gtk.Container+ContainerChild
			this.GtkAlignment6 = new global::Gtk.Alignment (0F, 0F, 1F, 1F);
			this.GtkAlignment6.Name = "GtkAlignment6";
			this.GtkAlignment6.LeftPadding = ((uint)(12));
			// Container child GtkAlignment6.Gtk.Container+ContainerChild
			this.hipentry1 = null;
			this.GtkAlignment6.Add (this.hipentry1);
			this.frame7.Add (this.GtkAlignment6);
			this.GtkLabel10 = new global::Gtk.Label ();
			this.GtkLabel10.Name = "GtkLabel10";
			this.GtkLabel10.LabelProp = global::Mono.Unix.Catalog.GetString ("<b>HIpEntry</b>");
			this.GtkLabel10.UseMarkup = true;
			this.frame7.LabelWidget = this.GtkLabel10;
			this.vbox6.Add (this.frame7);
			global::Gtk.Box.BoxChild w42 = ((global::Gtk.Box.BoxChild)(this.vbox6 [this.frame7]));
			w42.Position = 4;
			w42.Expand = false;
			w42.Fill = false;
			// Container child vbox6.Gtk.Box+BoxChild
			this.frame8 = new global::Gtk.Frame ();
			this.frame8.Name = "frame8";
			this.frame8.ShadowType = ((global::Gtk.ShadowType)(1));
			// Container child frame8.Gtk.Container+ContainerChild
			this.GtkAlignment7 = new global::Gtk.Alignment (0F, 0F, 1F, 1F);
			this.GtkAlignment7.Name = "GtkAlignment7";
			this.GtkAlignment7.LeftPadding = ((uint)(12));
			// Container child GtkAlignment7.Gtk.Container+ContainerChild
			this.vbox7 = new global::Gtk.VBox ();
			this.vbox7.Name = "vbox7";
			this.vbox7.Spacing = 6;
			// Container child vbox7.Gtk.Box+BoxChild
			this.RegExEntry = null;
			this.vbox7.Add (this.RegExEntry);
			global::Gtk.Box.BoxChild w43 = ((global::Gtk.Box.BoxChild)(this.vbox7 [this.RegExEntry]));
			w43.Position = 0;
			w43.Expand = false;
			w43.Fill = false;
			// Container child vbox7.Gtk.Box+BoxChild
			this.hbox13 = new global::Gtk.HBox ();
			this.hbox13.Name = "hbox13";
			this.hbox13.Spacing = 6;
			// Container child hbox13.Gtk.Box+BoxChild
			this.label12 = new global::Gtk.Label ();
			this.label12.Name = "label12";
			this.label12.LabelProp = global::Mono.Unix.Catalog.GetString ("Regular expression used:");
			this.hbox13.Add (this.label12);
			global::Gtk.Box.BoxChild w44 = ((global::Gtk.Box.BoxChild)(this.hbox13 [this.label12]));
			w44.Position = 0;
			w44.Expand = false;
			w44.Fill = false;
			// Container child hbox13.Gtk.Box+BoxChild
			this.TxtRegularExpresion = new global::Gtk.Entry ();
			this.TxtRegularExpresion.CanFocus = true;
			this.TxtRegularExpresion.Name = "TxtRegularExpresion";
			this.TxtRegularExpresion.Text = global::Mono.Unix.Catalog.GetString ("\\d{3}-\\d{2}-\\d{4}");
			this.TxtRegularExpresion.IsEditable = true;
			this.TxtRegularExpresion.InvisibleChar = '●';
			this.hbox13.Add (this.TxtRegularExpresion);
			global::Gtk.Box.BoxChild w45 = ((global::Gtk.Box.BoxChild)(this.hbox13 [this.TxtRegularExpresion]));
			w45.Position = 1;
			// Container child hbox13.Gtk.Box+BoxChild
			this.BtnApplyRegex = new global::Gtk.Button ();
			this.BtnApplyRegex.CanFocus = true;
			this.BtnApplyRegex.Name = "BtnApplyRegex";
			this.BtnApplyRegex.UseStock = true;
			this.BtnApplyRegex.UseUnderline = true;
			this.BtnApplyRegex.Label = "gtk-apply";
			this.hbox13.Add (this.BtnApplyRegex);
			global::Gtk.Box.BoxChild w46 = ((global::Gtk.Box.BoxChild)(this.hbox13 [this.BtnApplyRegex]));
			w46.Position = 2;
			w46.Expand = false;
			w46.Fill = false;
			this.vbox7.Add (this.hbox13);
			global::Gtk.Box.BoxChild w47 = ((global::Gtk.Box.BoxChild)(this.vbox7 [this.hbox13]));
			w47.Position = 1;
			w47.Expand = false;
			w47.Fill = false;
			this.GtkAlignment7.Add (this.vbox7);
			this.frame8.Add (this.GtkAlignment7);
			this.GtkLabel12 = new global::Gtk.Label ();
			this.GtkLabel12.Name = "GtkLabel12";
			this.GtkLabel12.LabelProp = global::Mono.Unix.Catalog.GetString ("<b>HRegExEntry</b>");
			this.GtkLabel12.UseMarkup = true;
			this.frame8.LabelWidget = this.GtkLabel12;
			this.vbox6.Add (this.frame8);
			global::Gtk.Box.BoxChild w50 = ((global::Gtk.Box.BoxChild)(this.vbox6 [this.frame8]));
			w50.Position = 5;
			w50.Expand = false;
			w50.Fill = false;
			// Container child vbox6.Gtk.Box+BoxChild
			this.BtnToolTip = new global::Gtk.Button ();
			this.BtnToolTip.CanFocus = true;
			this.BtnToolTip.Name = "BtnToolTip";
			this.BtnToolTip.UseUnderline = true;
			this.BtnToolTip.Label = global::Mono.Unix.Catalog.GetString ("Look ! I have a baloon tooltip over me!");
			global::Gtk.Image w51 = new global::Gtk.Image ();
			w51.Pixbuf = global::Stetic.IconLoader.LoadIcon (this, "gtk-about", global::Gtk.IconSize.Menu);
			this.BtnToolTip.Image = w51;
			this.vbox6.Add (this.BtnToolTip);
			global::Gtk.Box.BoxChild w52 = ((global::Gtk.Box.BoxChild)(this.vbox6 [this.BtnToolTip]));
			w52.Position = 6;
			w52.Expand = false;
			w52.Fill = false;
			this.notebook1.Add (this.vbox6);
			global::Gtk.Notebook.NotebookChild w53 = ((global::Gtk.Notebook.NotebookChild)(this.notebook1 [this.vbox6]));
			w53.Position = 4;
			// Notebook tab
			this.label11 = new global::Gtk.Label ();
			this.label11.Name = "label11";
			this.label11.LabelProp = global::Mono.Unix.Catalog.GetString ("Other widgets");
			this.notebook1.SetTabLabel (this.vbox6, this.label11);
			this.label11.ShowAll ();
			// Container child notebook1.Gtk.Notebook+NotebookChild
			this.hbox14 = new global::Gtk.HBox ();
			this.hbox14.Name = "hbox14";
			this.hbox14.Spacing = 6;
			// Container child hbox14.Gtk.Box+BoxChild
			this.vbox8 = new global::Gtk.VBox ();
			this.vbox8.Name = "vbox8";
			this.vbox8.Spacing = 6;
			// Container child vbox8.Gtk.Box+BoxChild
			this.hcolorpickerwidget1 = null;
			this.vbox8.Add (this.hcolorpickerwidget1);
			global::Gtk.Box.BoxChild w54 = ((global::Gtk.Box.BoxChild)(this.vbox8 [this.hcolorpickerwidget1]));
			w54.Position = 0;
			this.hbox14.Add (this.vbox8);
			global::Gtk.Box.BoxChild w55 = ((global::Gtk.Box.BoxChild)(this.hbox14 [this.vbox8]));
			w55.Position = 0;
			this.notebook1.Add (this.hbox14);
			global::Gtk.Notebook.NotebookChild w56 = ((global::Gtk.Notebook.NotebookChild)(this.notebook1 [this.hbox14]));
			w56.Position = 5;
			this.Add (this.notebook1);
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.DefaultWidth = 623;
			this.DefaultHeight = 523;
			this.Show ();
			this.DeleteEvent += new global::Gtk.DeleteEventHandler (this.OnDeleteEvent);
			this.BtnTreeViewDemo.Clicked += new global::System.EventHandler (this.OnBtnTreeViewDemoClicked);
			this.BtnSimpleListDemo.Clicked += new global::System.EventHandler (this.OnBtnSimpleListDemoClicked);
			this.BtnStartComboDemo.Clicked += new global::System.EventHandler (this.OnBtnStartComboDemoClicked);
			this.ComboTreeDemo.Clicked += new global::System.EventHandler (this.OnComboTreeDemoClicked);
			this.BtnApplyRegex.Clicked += new global::System.EventHandler (this.OnBtnApplyRegexClicked);
		}
	}
}
